name: Sync Downstream from Upstream

on:
  workflow_dispatch:
    inputs:
      branch_name:
        description: "Branch name to sync:"
        required: true
        type: string

env:
  RUNTIME_IMAGES_DIR: "jupyter/datascience/ubi9-python-3.11/runtime-images/*.json"
  MANIFEST_FILES: "manifests/base/*.env"
  UPSTREAM_OWNER: "atheo89"
  DOWNSTREAM_OWNER: "Org-Test-Template"

  BRANCH_NAME: ${{ inputs.branch_name }}
  TEMP_BRANCH: sync-ds-${{ inputs.branch_name }}-${{ github.run_id }}


jobs:
  sync-branches:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
    - name: Set up Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Add upstream and downstream remotes
      run: |
        git remote add upstream https://github.com/$UPSTREAM_OWNER/notebooks.git
        git fetch --all

    - name: Determine Downstream Branch
      id: determine_branch
      run: |
        # Check if the branch follows the YYYYx pattern
        if [[ "${{ inputs.branch_name }}" =~ ^[0-9]{4}[a-zA-Z]$ ]]; then
          DOWNSTREAM_BRANCH="release-${{ inputs.branch_name }}"
        else
          # For 'main', keep it as 'main'
          DOWNSTREAM_BRANCH="${{ inputs.branch_name }}"
        fi

        echo "DOWNSTREAM_BRANCH=$DOWNSTREAM_BRANCH" >> $GITHUB_ENV

    - name: Sync branches without extra merge commits
      env:
        BRANCH_NAME: ${{ inputs.branch_name }}
        DOWNSTREAM_BRANCH: ${{ env.DOWNSTREAM_BRANCH }}
        RUNTIME_IMAGES_DIR: ${{ env.RUNTIME_IMAGES_DIR }}
        MANIFEST_FILES: ${{ env.MANIFEST_FILES }}
      run: |
        set -e

        echo "Syncing downstream branch '${DOWNSTREAM_BRANCH}' from upstream branch '${BRANCH_NAME}'"

        # Check out the downstream branch locally
        git checkout origin/${DOWNSTREAM_BRANCH} -b ${TEMP_BRANCH} || exit 1

        # Attempt fast-forward merge
        git merge upstream/${BRANCH_NAME} --ff-only || {
          echo "Fast-forward merge failed. Falling back to rebase."

          # Rebase onto the upstream branch
          git rebase upstream/${BRANCH_NAME} || {
            echo "Rebase encountered conflicts. Attempting to resolve..."

            # Resolve known conflicts
            FILES_TO_RESOLVE=$(eval echo "${RUNTIME_IMAGES_DIR} ${MANIFEST_FILES}")
            for FILE in $FILES_TO_RESOLVE; do
              if [[ -f "$FILE" && "$(git status --porcelain=v1 2>/dev/null | grep -c "$FILE")" -gt 0 ]]; then
                echo "Resolving conflict for $FILE by keeping downstream changes."
                git checkout --ours "$FILE"
                git add "$FILE"
              fi
            done

            # Continue the rebase process
            git rebase --continue || {
              echo "Rebase failed after conflict resolution. Aborting rebase."
              git rebase --abort
              exit 1
            }
          }
        }

        # Push changes to the temporary branch
        git push origin ${TEMP_BRANCH}


    - name: Create PR
      run: |
          gh pr create --repo https://github.com/$DOWNSTREAM_OWNER/notebooks.git \
            --title "$pr_title" \
            --body "$pr_body" \
            --head ${DOWNSTREAM_OWNER}:${TEMP_BRANCH} \
            --base ${DOWNSTREAM_BRANCH}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        pr_title: "Sync downstream from upstream"
        pr_body: |
            :robot: This is an automated Pull Request created by `/.github/workflows/gggg.yaml`.

            The following related files have been updated:
              - $FILES_TO_RESOLVE
